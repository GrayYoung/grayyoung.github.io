// Animation

@mixin generateAnimations($startDelay, $stopDelay, $secondAnimationStartDelay) {
	//[$startDelay ∧ $stopDelay ∊ (0;100 - $secondAnimationStartDelay)] && [$startDelay + $stopDelay < 100 - $secondAnimationStartDelay]
	$startSecond: $startDelay + $secondAnimationStartDelay;
	$secondAnimationTime: 100 - $startDelay - $stopDelay - $secondAnimationStartDelay;

	$r: $toggleCircleSize / 2;
	$perimeterCircle: 2 * 3.141592653589793238462643383279502884197169 * $r;

	@keyframes circle {
		from {
			clip-path: polygon(0 0);
			border-color: $text-color;
		}

		#{$startSecond - 0.001}% {
			clip-path: polygon(0 0);
		}

		#{$startSecond}% {
			-webkit-clip-path: polygon($r $r, $r + $toggleCircleSize $r, $r + $toggleCircleSize $r, $r + $toggleCircleSize $r, $r + $toggleCircleSize $r, $r + $toggleCircleSize $r);
			clip-path: polygon($r $r, $r + $toggleCircleSize $r, $r + $toggleCircleSize $r, $r + $toggleCircleSize $r, $r + $toggleCircleSize $r, $r + $toggleCircleSize $r);
		}

		#{$startSecond + $secondAnimationTime * 0.25}% {
			-webkit-clip-path: polygon($r $r, $r + $toggleCircleSize $r, $r $r - $toggleCircleSize, $r $r - $toggleCircleSize, $r $r - $toggleCircleSize, $r $r - $toggleCircleSize);
			clip-path: polygon($r $r, $r + $toggleCircleSize $r, $r $r - $toggleCircleSize, $r $r - $toggleCircleSize, $r $r - $toggleCircleSize, $r $r - $toggleCircleSize);
		}

		#{$startSecond + $secondAnimationTime * 0.5}% {
			-webkit-clip-path: polygon($r $r, $r + $toggleCircleSize $r, $r $r - $toggleCircleSize, $r - $toggleCircleSize $r, $r - $toggleCircleSize $r, $r - $toggleCircleSize $r);
			clip-path: polygon($r $r, $r + $toggleCircleSize $r, $r $r - $toggleCircleSize, $r - $toggleCircleSize $r, $r - $toggleCircleSize $r, $r - $toggleCircleSize $r);
		}

		#{$startSecond + $secondAnimationTime * 0.75}% {
			-webkit-clip-path: polygon($r $r, $r + $toggleCircleSize $r, $r $r - $toggleCircleSize, $r - $toggleCircleSize $r, $r $r + $toggleCircleSize, $r $r + $toggleCircleSize);
			clip-path: polygon($r $r, $r + $toggleCircleSize $r, $r $r - $toggleCircleSize, $r - $toggleCircleSize $r, $r $r + $toggleCircleSize, $r $r + $toggleCircleSize);
		}

		to, #{100 - $stopDelay}% {
			-webkit-clip-path: polygon($r $r, $r + $toggleCircleSize $r, $r $r - $toggleCircleSize, $r - $toggleCircleSize $r, $r $r + $toggleCircleSize, $r + $toggleCircleSize $r);
			clip-path: polygon($r $r, $r + $toggleCircleSize $r, $r $r - $toggleCircleSize, $r - $toggleCircleSize $r, $r $r + $toggleCircleSize, $r + $toggleCircleSize $r);
			padding-top: 7px;
			border-color: $text-color;
		}
	}

	@keyframes line-top {
		from, #{$startDelay - 0.001}% {
			transform: translateX(0) translateX(0) translateY(0) rotate(0deg);
		}

		#{($startDelay +  $secondAnimationStartDelay / 2) * 1.1}% {
			transform: translateX(-$lineSize / 10) translateY(0) rotate(10deg);
		}

		to, #{100 - $stopDelay}% {
			transform: translateX(0) translateY(($lineSize + $borderWidth) / 4) rotate(-135deg);
		}
	}

	@keyframes line-middle {
		from, #{$startDelay - 0.001}% {
			transform: translateX(0);
		}

		#{($startDelay +  $secondAnimationStartDelay / 2) * 0.9}% {
			transform: translateX(-($lineSize / 10) * 1.2);
		}

		#{$startSecond}% {
			transform: translateX(($toggleCircleSize - $lineSize) * 0.5);
		}

		#{$startSecond + $secondAnimationTime * 0.25}% {
			transform: translateX(($toggleCircleSize - $lineSize) * 0.5 + $perimeterCircle);
		}

		to, #{100 - $stopDelay}% {
			transform: translateX(($toggleCircleSize - $lineSize) * 0.5 + $perimeterCircle);
		}
	}

	@keyframes line-bottom {
		from, #{$startDelay - 0.001}% {
			transform: translateY(0) rotate(0deg);
		}

		#{($startDelay +  $secondAnimationStartDelay / 2) * 1.1}% {
			transform: translateX(-$lineSize / 10) translateY(0) rotate(-10deg);
		}

		to, #{100 - $stopDelay}% {
			transform: translateX(0) translateY(-($lineSize + $borderWidth) / 4) rotate(135deg);
		}
	}
}